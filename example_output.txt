Topic: C++ oop

Write each question in a way that it is not a duplicate and avoids repetition.
Each question should probe a different aspect of understanding C++ OOP.

1. Can you explain the concept of inheritance in C++ and how it diffures from other languages?
2. How does polymorphism in C++ enhance code reusability and flexibility?
3. Can you provide an example of how encapsulation is used in a C++ class to protect data integrity?
4. How does the use of abstract classes and interfaces in C++ contribute to code organization and maintainability?
5. In C++, what is the difference between a constructor and an initializer list, and when should each be used?

How can I implement a class in C++ that demonstrates the concept of inheritance?

Sure, here's an example of a simple C++ program that demonstrates inheritance:

```cpp
#include <iostream>

// Base class
class Animal {
public:
    Animal(const std::string& name) : name_(name) {}
    virtual void makeSound() const {
        std::cout << "This animal makes a sound." << std::endl;
    }

protected:
    std::string name_;
};

// Derived class
class Dog : public Animal {
public:
    Dog(const std::string& name